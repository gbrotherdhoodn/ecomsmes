/* less/components/_grid.less */
// .for
.for(@i, @n) {
    .-each(@i)
}

.for(@n) when (isnumber(@n)) {
    .for(1, @n)
}

.for(@i, @n) when not (@i = @n) {
    .for((@i + (@n - @i) / abs(@n - @i)), @n);
}

// .for-each
.for-each(@array) when (default()) {
    .for-impl_(length(@array))
}

.for-impl_(@i) when (@i > 1) {
    .for-impl_((@i - 1))
}

.for-impl_(@i) when (@i > 0) {
    .-each(extract(@array, @i))
}

.row-reverse() {
    flex-direction: row-reverse;
    flex-wrap: wrap-reverse;
}

.col-reverse() {
    flex-direction: column-reverse;
    flex-wrap: wrap-reverse;
}

.makegrid(@class) {
    [class^="col-@{class}"], [class*=" col-@{class}"],
    [class^="col-@{class}-offset"], [class*=" col-@{class}-offset"] {
        box-sizing: border-box;
        flex: 0 0 auto;
        flex-direction: column;
        padding-right: @half-gutter-width;
        padding-left: @half-gutter-width;
    }

    .col-@{class} {
        flex-grow: 1;
        flex-basis: 0;
        max-width: 100%;
    }

    .make-cols(@class);
    .make-offsets(@class);
    .make-position-classes(@class);
}

.make-column(@class; @col-number) {
    .col-@{class}-@{col-number} {
        flex-basis: ((100% / @grid-columns) * @col-number);
        max-width: ((100% / @grid-columns) * @col-number);
    }
}

.make-cols(@class; @col-number: @grid-columns) when (@col-number > 0) {
    .make-cols(@class; (@col-number - 1));
    .make-column(@class; @col-number);
}

.make-offset(@class; @col-number) {
    .col-@{class}-offset-@{col-number} {
        margin-left: ((100% / @grid-columns) * @col-number);
    }
}

.make-offsets(@class; @col-number: (@grid-columns - 1)) when (@col-number > 0) {
    .make-offsets(@class; (@col-number - 1));
    .make-offset(@class; @col-number);
}

.make-position-classes(@class) {

    .start-@{class} {
        justify-content: flex-start;
        text-align: start;
    }
    .center-@{class} {
        justify-content: center;
        text-align: center;
    }
    .end-@{class} {
        justify-content: flex-end;
        text-align: end;
    }
    .top-@{class} {
        align-items: flex-start;
    }
    .middle-@{class} {
        align-items: center;
    }
    .bottom-@{class} {
        align-items: flex-end;
    }
    .around-@{class} {
        justify-content: space-around;
    }
    .between-@{class} {
        justify-content: space-between;
    }
    .first-@{class} {
        order: -1;
    }
    .last-@{class} {
        order: 1;
    }
    .reverse-@{class} {
        flex-direction: row-reverse;
        flex-wrap: wrap-reverse;
    }

    .reverse-columns-@{class} {
        flex-direction: column-reverse;
        flex-wrap: wrap-reverse;
    }
    .reverse-row-@{class} {
        flex-direction: row;
        flex-wrap: wrap;
    }
    .reverse-col-@{class} {
        flex-direction: column;
        flex-wrap: wrap;
    }
}


.grid {
    padding-right: @outer-margin;
    padding-left: @outer-margin;
}

.row {
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin-right: @gutter-compensation;
    margin-left: @gutter-compensation;
}

.row.reverse {
    .row-reverse();
}

.col.reverse {
    .col-reverse();
}

.makegrid(xs);

.for-each(@col-breaks);
.-each(@breakpoint) {
    @media only screen and (min-width: @breakpoint) {
        .makegrid(extract(@col-names, @i));
    }
}

.box-row {
    position: relative;
    margin-bottom: 1rem;
    padding: 1rem;
    box-sizing: border-box;
    min-height: 1rem;
    background: #007FFF;
    border: 1px solid #FFF;
    border-radius: 2px;
    overflow: hidden;
    text-align: center;
    color: #fff;
}


//@media screen and (max-width: @m-break) {
//     .make-position-classes("mobile") {
//        .start-@{class} {
//            justify-content: flex-start;
//            text-align: start;
//        }
//        .center-@{class} {
//            justify-content: center;
//            text-align: center;
//        }
//        .end-@{class} {
//            justify-content: flex-end;
//            text-align: end;
//        }
//        .top-@{class} {
//            align-items: flex-start;
//        }
//        .middle-@{class} {
//            align-items: center;
//        }
//        .bottom-@{class} {
//            align-items: flex-end;
//        }
//        .around-@{class} {
//            justify-content: space-around;
//        }
//        .between-@{class} {
//            justify-content: space-between;
//        }
//        .first-@{class} {
//            order: -1;
//        }
//        .last-@{class} {
//            order: 1;
//        }
//    }
//}


